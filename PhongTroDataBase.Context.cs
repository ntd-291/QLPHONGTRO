//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyTest
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MotelManagerEntities : DbContext
    {
        public MotelManagerEntities()
            : base("name=MotelManagerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BILL> BILLs { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMERs { get; set; }
        public virtual DbSet<MOTELROOM> MOTELROOMs { get; set; }
        public virtual DbSet<PARTICULARSERVICE> PARTICULARSERVICEs { get; set; }
        public virtual DbSet<REINTINFOR> REINTINFORs { get; set; }
        public virtual DbSet<ROLE> ROLEs { get; set; }
        public virtual DbSet<ROOMRANGE> ROOMRANGEs { get; set; }
        public virtual DbSet<ROOMRANK> ROOMRANKs { get; set; }
        public virtual DbSet<SERVICE> SERVICEs { get; set; }
        public virtual DbSet<STAFF> STAFFs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<USER> USERs { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CountCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CountCustomer");
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CountRange()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CountRange");
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CountRank()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CountRank");
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CountRentInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CountRentInfo");
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CountRoom()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CountRoom");
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CountService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CountService");
        }
    
        public virtual ObjectResult<Nullable<int>> USP_CountStaff()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_CountStaff");
        }
    
        public virtual ObjectResult<USP_PageCustomer_Result> USP_PageCustomer(Nullable<int> bd, Nullable<int> kt)
        {
            var bdParameter = bd.HasValue ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(int));
    
            var ktParameter = kt.HasValue ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PageCustomer_Result>("USP_PageCustomer", bdParameter, ktParameter);
        }
    
        public virtual ObjectResult<USP_PageRange_Result> USP_PageRange(Nullable<int> bd, Nullable<int> kt)
        {
            var bdParameter = bd.HasValue ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(int));
    
            var ktParameter = kt.HasValue ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PageRange_Result>("USP_PageRange", bdParameter, ktParameter);
        }
    
        public virtual ObjectResult<USP_PageRank_Result> USP_PageRank(Nullable<int> bd, Nullable<int> kt)
        {
            var bdParameter = bd.HasValue ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(int));
    
            var ktParameter = kt.HasValue ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PageRank_Result>("USP_PageRank", bdParameter, ktParameter);
        }
    
        public virtual ObjectResult<USP_PageRentInfo_Result> USP_PageRentInfo(Nullable<int> bd, Nullable<int> kt)
        {
            var bdParameter = bd.HasValue ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(int));
    
            var ktParameter = kt.HasValue ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PageRentInfo_Result>("USP_PageRentInfo", bdParameter, ktParameter);
        }
    
        public virtual ObjectResult<USP_PageRoom_Result> USP_PageRoom(Nullable<int> bd, Nullable<int> kt)
        {
            var bdParameter = bd.HasValue ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(int));
    
            var ktParameter = kt.HasValue ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PageRoom_Result>("USP_PageRoom", bdParameter, ktParameter);
        }
    
        public virtual ObjectResult<USP_PageService_Result> USP_PageService(Nullable<int> bd, Nullable<int> kt)
        {
            var bdParameter = bd.HasValue ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(int));
    
            var ktParameter = kt.HasValue ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PageService_Result>("USP_PageService", bdParameter, ktParameter);
        }
    
        public virtual ObjectResult<USP_PageStaff_Result> USP_PageStaff(Nullable<int> bd, Nullable<int> kt)
        {
            var bdParameter = bd.HasValue ?
                new ObjectParameter("bd", bd) :
                new ObjectParameter("bd", typeof(int));
    
            var ktParameter = kt.HasValue ?
                new ObjectParameter("kt", kt) :
                new ObjectParameter("kt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_PageStaff_Result>("USP_PageStaff", bdParameter, ktParameter);
        }
    }
}
